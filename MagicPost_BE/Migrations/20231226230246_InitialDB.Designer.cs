// <auto-generated />
using System;
using MagicPost_BE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MagicPost_BE.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231226230246_InitialDB")]
    partial class InitialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MagicPost_BE.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("WorkAtOfficeId")
                        .HasColumnType("int");

                    b.Property<long?>("WorkAtOfficeId1")
                        .HasColumnType("bigint");

                    b.HasKey("AccountId");

                    b.HasIndex("WorkAtOfficeId1");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            Email = "dang@vnu.edu.vn",
                            FullName = "Nguyen Hong Dang",
                            Password = "123",
                            Phone = "0888888888",
                            Role = 0
                        },
                        new
                        {
                            AccountId = 2,
                            Email = "duong@vnu.edu.vn",
                            FullName = "Nguyen Hoang Duong",
                            Password = "123",
                            Phone = "0999999999",
                            Role = 0
                        },
                        new
                        {
                            AccountId = 3,
                            Email = "an@vnu.edu.vn",
                            FullName = "Vu Huu An",
                            Password = "123",
                            Phone = "0777777777",
                            Role = 2
                        },
                        new
                        {
                            AccountId = 4,
                            Email = "andy@vnu.edu.vn",
                            FullName = "Andy",
                            Password = "123",
                            Phone = "0152345688",
                            Role = 4
                        });
                });

            modelBuilder.Entity("MagicPost_BE.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("MagicPost_BE.Models.Office", b =>
                {
                    b.Property<long>("OfficeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OfficeId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfficeType")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OfficeId");

                    b.ToTable("Office");

                    b.HasData(
                        new
                        {
                            OfficeId = 100L,
                            OfficeName = "Ha Dong",
                            OfficeType = 0
                        },
                        new
                        {
                            OfficeId = 101L,
                            OfficeName = "Cau Giay",
                            OfficeType = 1
                        },
                        new
                        {
                            OfficeId = 102L,
                            OfficeName = "Hai Ba Trung",
                            OfficeType = 1
                        });
                });

            modelBuilder.Entity("MagicPost_BE.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<long?>("CurrentOfficeOfficeId")
                        .HasColumnType("bigint");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("SentFromOfficeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SentToOfficeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("CurrentOfficeOfficeId");

                    b.HasIndex("CustomerID");

                    b.HasIndex("SentFromOfficeId");

                    b.HasIndex("SentToOfficeId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MagicPost_BE.Models.Account", b =>
                {
                    b.HasOne("MagicPost_BE.Models.Office", "WorkAt")
                        .WithMany("Accounts")
                        .HasForeignKey("WorkAtOfficeId1");

                    b.Navigation("WorkAt");
                });

            modelBuilder.Entity("MagicPost_BE.Models.Order", b =>
                {
                    b.HasOne("MagicPost_BE.Models.Office", "CurrentOffice")
                        .WithMany()
                        .HasForeignKey("CurrentOfficeOfficeId");

                    b.HasOne("MagicPost_BE.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MagicPost_BE.Models.Office", "SentFrom")
                        .WithMany()
                        .HasForeignKey("SentFromOfficeId");

                    b.HasOne("MagicPost_BE.Models.Office", "SentTo")
                        .WithMany()
                        .HasForeignKey("SentToOfficeId");

                    b.Navigation("CurrentOffice");

                    b.Navigation("Customer");

                    b.Navigation("SentFrom");

                    b.Navigation("SentTo");
                });

            modelBuilder.Entity("MagicPost_BE.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("MagicPost_BE.Models.Office", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
